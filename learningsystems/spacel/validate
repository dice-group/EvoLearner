#!/bin/bash - 
#===============================================================================
#
#          FILE: validate.sh
# 
#         USAGE: ./validate.sh 
# 
#   DESCRIPTION: 
# 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Patrick Westphal (), patrick.westphal@informatik.uni-leipzig.de
#  ORGANIZATION: 
#       CREATED: 05/03/2017 12:33:55 PM
#      REVISION:  ---
#===============================================================================

set -o nounset                              # Treat unset variables as an error

smlb_step="validate"

# 0 --> off; 1 --> DEBUG; 2 --> TRACE
smlb_log_level=1

cd "$(dirname "$0")"
program_dir="$(pwd)"


############################################################
# Source the commons file to make a bunch of functions available
. ./common.sh


############################################################
# Read in the main configuration file
#read_config_ini_file "$1"
read_property_file "$1"


############################################################
# Read learning problem-specific configuration
lp_specific_config_file="../../$learning_tasks_dir_name/$smlb_learningtask/$kr_lang_dir_name/$learning_problems_dir_name/$smlb_learningproblem/$lp_specific_condif_file_name"
if [ -f "$lp_specific_config_file" ]
then
    debug "Found $lp_specific_config_file. Will try read it."
    read_lp_ini_file "$lp_specific_config_file"
else
    debug "No learning problem-specific file found under $lp_specific_config_file"
fi


############################################################
# Write out gathered settings
tmpdir="$smlb_filename__workdir"
config_file="$tmpdir"/run.conf
write_config "$config_file"


############################################################
# Add some additional settings
add_to_config "cli.type = \"org.dllearner.cli.ParCEL.ExpressionValidation\"" "$config_file"

# we need to escape \" with %22 for the dllearner config parser
#add_to_config "cli.expression = \"$(sed -e 's.".%22.g' < "$smlb_filename__input")\"" "$config_file"

# set knowledge source
sources=$(add_knowledge_sources_to_config_and_get_sources "$smlb_learningtask" "$config_file")

# set reasoner component if no reasoner component was set
if [ $reasoner_is_set -eq 0 ]
then
    add_to_config "$reasoner_const.type = \"fast instance checker\"" "$config_file"
fi

# add knowledge sources for reasoner component
add_to_config "$reasoner_const.sources = { $sources }" "$config_file"

# set learning problem if no learning problem was set
if [ $lp_is_set -eq 0 ]
then
    add_to_config "$lp_const.type = \"org.dllearner.algorithms.ParCEL.ParCELPosNegLP\"" "$config_file"
fi

# load covered examples of solution
add_to_config "cli.cov = {" "$config_file"
add_to_config "$(read_examples $smlb_filename__input)" "$config_file"
add_to_config "}" "$config_file"

# load positive examples
add_to_config "$lp_const.positiveExamples = {" "$config_file"
add_to_config "$(read_examples $smlb_filename__pos)" "$config_file"
add_to_config "}" "$config_file"

# load negative examples
add_to_config "$lp_const.negativeExamples = {" "$config_file"
add_to_config "$(read_examples $smlb_filename__neg)" "$config_file"
add_to_config "}" "$config_file"


java -jar parcel-cli.jar "$config_file" | tee "$tmpdir"/output.log

grep '#EVAL#' "$tmpdir"/output.log \
        | sed -e 's,^#EVAL# ,,' > "$smlb_filename__output"

